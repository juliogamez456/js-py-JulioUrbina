def encontrar_mayor_y_menor(numeros):
    """Encuentra el n√∫mero mayor y el n√∫mero menor en una lista.

    Args:
        numeros: Una lista de n√∫meros.

    Returns:
        Una tupla con el n√∫mero mayor y el n√∫mero menor, o (None, None) si la lista est√° vac√≠a o contiene elementos no num√©ricos.
    """
    if not numeros:
        return None, None  # Manejar el caso de lista vac√≠a

    try:
        mayor = max(numeros)
        menor = min(numeros)
        return mayor, menor
    except TypeError:
        return None, None  # Manejar el caso de elementos no num√©ricos

def obtener_lista_numeros():
    """Obtiene una lista de n√∫meros del usuario."""
    while True:
        entrada = input("üî¢ Ingresa una lista de n√∫meros separados por espacios (ej. 1 2 3): ")
        if not entrada.strip():
            print("‚ö†Ô∏è Por favor, ingresa al menos un n√∫mero.")
            continue

        try:
            numeros = [float(num) for num in entrada.split()]
            return numeros
        except ValueError:
            print("‚ùå Por favor, ingresa solo n√∫meros v√°lidos.")

def main():
    """Funci√≥n principal que obtiene la lista, encuentra el mayor y el menor, y muestra los resultados."""
    numeros = obtener_lista_numeros()
    mayor, menor = encontrar_mayor_y_menor(numeros)

    if mayor is not None and menor is not None:
        print(f"\nüî¢ N√∫meros ingresados: {numeros}")
        print(f"üîº Mayor: {mayor}")
        print(f"üîΩ Menor: {menor}")
    else:
        print("‚ùå No se pudo determinar el mayor y el menor. Aseg√∫rate de ingresar n√∫meros v√°lidos.")

if __name__ == "__main__":
    main()